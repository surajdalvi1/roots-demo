{"version":3,"sources":["node_modules/axis/axis/reset.styl","node_modules/axis/axis/typography.styl","assets/css/master.styl"],"names":[],"mappings":"AAyFE;EACE,wBAAA;EACA,2BAAA;EACA,+BAAA;;AAEF;EACE,UAAA;;AAEF;;;;;;;;;;;;EACE,eAAA;;AAEF;;;;EACE,sBAAA;EACA,yBAAA;;AAEF;EACE,cAAA;EACA,UAAA;;AAEF;;EACE,cAAA;;AAEF;EACE,wBAAA;;AAEA;;EACE,WAAA;;AAEJ;EACE,0BAAA;;AAEF;;EACE,kBAAA;;AAEF;EACE,mBAAA;;AAEF;EACE,eAAA;EACA,iBAAA;;AAEF;EACE,iBAAA;EACA,YAAA;;AAEF;EACE,eAAA;;AAEF;;EACE,eAAA;EACA,eAAA;EACA,mBAAA;EACA,yBAAA;;AAEF;EACE,YAAA;;AAEF;EACE,gBAAA;;AAEF;EACE,UAAA;;AAEF;EACE,iBAAA;;AAEF;EACE,iBAAA;;AAEF;EAEE,wBAAA;EACA,UAAA;;AAEF;EACE,eAAA;;AAEF;;;;EACE,kCAAA;EACA,eAAA;;AAEF;;;;;EACE,eAAA;EACA,cAAA;EACA,UAAA;;AAEF;EACE,kBAAA;;AAEF;;EACE,qBAAA;;AAEF;;;;EACE,2BAAA;EACA,gBAAA;;AAEF;;EACE,gBAAA;;AAEF;;EACE,UAAA;EACA,WAAA;;AAEF;EACE,oBAAA;;AAEF;;EACE,uBAAA;EACA,WAAA;;AAEF;;EACE,aAAA;;AAEF;EACE,8BAAA;EAGA,wBAAA;;AAEF;;EACE,yBAAA;;AAEF;EACE,0BAAA;EACA,cAAA;EACA,+BAAA;;AAEF;EACE,UAAA;EACA,WAAA;;AAEF;EACE,eAAA;;AAEF;EACE,kBAAA;;AAEF;EACE,0BAAA;EACA,kBAAA;;AAEF;;EACE,WAAA;;AC8LF;EACE,gBAAA;EACA,gBAAA;;AAEF;EACE,2EAAA;EACA,YAAA;EACA,oCAAA;EACA,+BAAA;EACA,2BAAA;EACA,uBAAA;;AC1aJ;EACE,cAAA","sourcesContent":["// -----\r\n// Reset\r\n// -----\r\n\r\n// Global Reset\r\n// Based on [Eric Meyer's reset](http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/)\r\n// ported from Nib\r\n\r\nglobal-reset()\r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  dl, dt, dd, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td\r\n    reset-box-model()\r\n    reset-font()\r\n  body\r\n    reset-body()\r\n  ol, ul\r\n    list-style: none\r\n  table\r\n    reset-table()\r\n  caption, th, td\r\n    reset-table-cell()\r\n  a img\r\n    border: none\r\n\r\nnested-reset()\r\n  div, span, object, iframe, h1, h2, h3, h4, h5, h6, p,\r\n  pre, a, abbr, acronym, address, code, del, dfn, em, img,\r\n  dl, dt, dd, ol, ul, li, fieldset, form, label,\r\n  legend, caption, tbody, tfoot, thead, tr\r\n    reset-box-model()\r\n    reset-font()\r\n  table\r\n    reset-table()\r\n  caption, th, td\r\n    reset-table-cell()\r\n  a img\r\n    border: none\r\n\r\nreset-box-model()\r\n  margin: 0\r\n  padding: 0\r\n  border: 0\r\n  outline: 0\r\n\r\nreset-font()\r\n  font-weight: inherit\r\n  font-style: inherit\r\n  font-family: inherit\r\n  font-size: 100%\r\n  vertical-align: baseline\r\n\r\nreset-body()\r\n  line-height: 1\r\n  color: black\r\n  background: white\r\n\r\nreset-table()\r\n  border-collapse: separate\r\n  border-spacing: 0\r\n  vertical-align: middle\r\n\r\nreset-table-cell()\r\n  text-align: left\r\n  font-weight: normal\r\n  vertical-align: middle\r\n\r\nreset-html5()\r\n  article, aside, canvas, details, figcaption,\r\n  figure, footer, header, hgroup, menu, nav,\r\n  section, summary, main\r\n    reset-box-model()\r\n    display: block\r\n  audio, canvas, video\r\n    display inline-block\r\n    *display inline\r\n    *zoom 1\r\n  audio:not([controls]),[hidden]\r\n    display none\r\n\r\n// Mixin: Normalize CSS\r\n// Based on v3.0.1 https://github.com/necolas/normalize.css\r\n\r\nnormalize-css()\r\n  html\r\n    font-family: sans-serif\r\n    -ms-text-size-adjust: 100%\r\n    -webkit-text-size-adjust: 100%\r\n\r\n  body\r\n    margin: 0\r\n\r\n  article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary\r\n    display: block\r\n\r\n  audio, canvas, progress, video\r\n    display: inline-block\r\n    vertical-align: baseline\r\n\r\n  audio:not([controls])\r\n    display: none\r\n    height: 0\r\n\r\n  [hidden], template\r\n    display: none\r\n\r\n  a\r\n    background: transparent\r\n\r\n    &:active, &:hover\r\n      outline: 0\r\n\r\n  abbr[title]\r\n    border-bottom: 1px dotted\r\n\r\n  b, strong\r\n    font-weight: bold\r\n\r\n  dfn\r\n    font-style: italic\r\n\r\n  h1\r\n    font-size: 2em\r\n    margin: 0.67em 0\r\n\r\n  mark\r\n    background: #ff0\r\n    color: #000\r\n\r\n  small\r\n    font-size: 80%\r\n\r\n  sub, sup\r\n    font-size: 75%\r\n    line-height: 0\r\n    position: relative\r\n    vertical-align: baseline\r\n\r\n  sup\r\n    top: -0.5em\r\n\r\n  sub\r\n    bottom: -0.25em\r\n\r\n  img\r\n    border: 0\r\n\r\n  svg:not(:root)\r\n    overflow: hidden\r\n\r\n  figure\r\n    margin: 1em 40px\r\n\r\n  hr\r\n    -moz-box-sizing: content-box\r\n    box-sizing: content-box\r\n    height: 0\r\n\r\n  pre\r\n    overflow: auto\r\n\r\n  code, kbd, pre, samp\r\n    font-family: monospace, monospace\r\n    font-size: 1em\r\n\r\n  button, input, optgroup, select, textarea\r\n    color: inherit\r\n    font: inherit\r\n    margin: 0\r\n\r\n  button\r\n    overflow: visible\r\n\r\n  button, select\r\n    text-transform: none\r\n\r\n  button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]\r\n    -webkit-appearance: button\r\n    cursor: pointer\r\n\r\n  button[disabled], html input[disabled]\r\n    cursor: default\r\n\r\n  button::-moz-focus-inner, input::-moz-focus-inner\r\n    border: 0\r\n    padding: 0\r\n\r\n  input\r\n    line-height: normal\r\n\r\n  input[type=\"checkbox\"], input[type=\"radio\"]\r\n    box-sizing: border-box\r\n    padding: 0\r\n\r\n  input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button\r\n    height: auto\r\n\r\n  input[type=\"search\"]\r\n    -webkit-appearance: textfield\r\n    -moz-box-sizing: content-box\r\n    -webkit-box-sizing: content-box\r\n    box-sizing: content-box\r\n\r\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration\r\n    -webkit-appearance: none\r\n\r\n  fieldset\r\n    border: 1px solid #c0c0c0\r\n    margin: 0 2px\r\n    padding: 0.35em 0.625em 0.75em\r\n\r\n  legend\r\n    border: 0\r\n    padding: 0\r\n\r\n  textarea\r\n    overflow: auto\r\n\r\n  optgroup\r\n    font-weight: bold\r\n\r\n  table\r\n    border-collapse: collapse\r\n    border-spacing: 0\r\n\r\n  td, th\r\n    padding: 0\r\n\r\n// Mixin: Fluid Media\r\n// Makes your img, video, and iframe tags responsive to their parent container.\r\n\r\nfluid-media()\r\n  img,\r\n  video,\r\n  iframe\r\n    max-width: 100%\r\n    height: auto\r\n    border: 0\r\n    -ms-interpolation-mode: bicubic\r\n    display: block\r\n\r\n// Mixin: Border Box HTML\r\n// Add border box to every element in your project. Used in your project root.\r\n// http://www.paulirish.com/2012/box-sizing-border-box-ftw/\r\n\r\nborder-box-html()\r\n  html\r\n    box-sizing: border-box\r\n\r\n  *,\r\n  *:before,\r\n  *:after\r\n    box-sizing: inherit\r\n\r\n// Mixin: Print Styles\r\n// Nice clean print styles so you don't have to worry about it.\r\n\r\nprint-styles()\r\n  @media print\r\n    body\r\n      width: 100% !important\r\n      margin: 0 !important\r\n      padding: 0 !important\r\n      font-size: 14pt\r\n      line-height: 1.45\r\n      font-family: Garamond, \"Times New Roman\", serif\r\n      color: #000\r\n      background: none\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6\r\n      page-break-after: avoid\r\n      font-family: \"Helvetica\", Arial, sans-serif\r\n\r\n    h1\r\n      font-size: 36pt\r\n      line-height: 1.25em\r\n\r\n    h2\r\n      font-size: 24pt\r\n      line-height: 1.25em\r\n\r\n    h3\r\n      font-size: 18pt\r\n      line-height: 1.25em\r\n\r\n    h4,\r\n    h5,\r\n    h6\r\n      font-size: 14pt\r\n      line-height: 1.25em\r\n\r\n    p,\r\n    h2,\r\n    h3\r\n      orphans: 3\r\n      widows: 3\r\n\r\n    code\r\n      font: 12pt Courier, $monospace\r\n\r\n    blockquote\r\n      margin: 1.2em\r\n      padding: 1em\r\n      font-size: 24pt\r\n      line-height: 1.45833333em\r\n      font-style: italic\r\n\r\n    hr\r\n      background-color: #ccc\r\n\r\n    img\r\n      float: left\r\n      margin: 1em 1.5em 1.5em 0\r\n      max-width: 100% !important\r\n\r\n    a img\r\n        border: none\r\n\r\n    a:link,\r\n    a:visited\r\n      background: transparent\r\n      font-weight: 700\r\n      text-decoration: underline\r\n      color: #333\r\n\r\n    a:link[href^=\"http://\"]:after,\r\n    a[href^=\"http://\"]:visited:after\r\n      content: \" (\" attr(href) \") \"\r\n      font-size: 90%\r\n\r\n    abbr[title]:after\r\n      content: \" (\" attr(title) \")\"\r\n\r\n    a[href^=\"http://\"]\r\n      color: #000\r\n\r\n    a[href$=\".jpg\"]:after,\r\n    a[href$=\".jpeg\"]:after,\r\n    a[href$=\".gif\"]:after,\r\n    a[href$=\".png\"]:after\r\n      content: \" (\" attr(href) \") \"\r\n      display: none\r\n\r\n    a[href^=\"#\"]:after, a[href^=\"javascript:\"]:after\r\n      content: \"\"\r\n\r\n    table\r\n      margin: 1px\r\n      text-align: left\r\n\r\n    th\r\n      border-bottom: 1px solid #333\r\n      font-weight: bold\r\n\r\n    td\r\n      border-bottom: 1px solid #333\r\n\r\n    th,\r\n    td\r\n      padding: 4px 10px 4px 0\r\n\r\n    tfoot\r\n      font-style: italic\r\n\r\n    caption\r\n      background: #fff\r\n      margin-bottom: 2em\r\n      text-align: left\r\n\r\n    thead\r\n      display: table-header-group\r\n\r\n    img,\r\n    tr\r\n      page-break-inside: avoid\r\n","// ----------\r\n// Typography\r\n// ----------\r\n\r\n// Alias: Bold\r\n// It's just faster to type bold() than font-weight: bold\r\n\r\nbold()\r\n  font-weight: bold\r\n\r\n// Alias: Italic\r\n// It's just faster to type italic() than font-style: italic\r\n\r\nitalic()\r\n  font-style: italic\r\n\r\n// Alias: Normal\r\n// Put the font-weight and style back to normal\r\n\r\nnormal()\r\n  font-weight: normal\r\n  font-style: normal\r\n\r\n// Mixin: Raquo\r\n//\r\n// Because technically raquo is not semantic, it's better to add it like this.\r\n//\r\n// ex. raquo()\r\n\r\nraquo()\r\n  &:after\r\n    content: \" \\00BB\"\r\n\r\n// Mixin: Font Face\r\n//\r\n// Super simple font-face declaration. Just give the name and the folder it\r\n// lives in. Make sure the font name matches the name of the files. Uses the\r\n// fontspring syntax:\r\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\r\n//\r\n// ex. font-face(proxima-nova, '/fonts')\r\n\r\nfont-face($name, $folder, $weight = 'normal', $style = 'normal')\r\n  @font-face\r\n    font-family: $name\r\n    src: url($folder unquote('/') $name unquote('.eot') '?#iefix') format('embedded-opentype'), url($folder unquote('/') $name unquote('.woff')) format('woff'), url($folder unquote('/') $name unquote('.ttf')) format('truetype'), url($folder unquote('/') $name unquote('.eot') unquote('#') $name) format('svg');\r\n    font-weight: unquote($weight)\r\n    font-style: unquote($style)\r\n\r\n\r\n// Mixin: Ellipsis\r\n// Truncate text to the width of its container...\r\n// ex: ellipsis()\r\n// ex: ellipsis: 300px\r\n\r\nellipsis($width = 100%)\r\n  white-space: nowrap\r\n  display: inline-block\r\n  max-width: $width\r\n  overflow: hidden\r\n  text-overflow: ellipsis\r\n  word-wrap: normal\r\n\r\n// Function: Line Height\r\n//\r\n// If there is a font-size set on the parent element, adjusts the line height to\r\n// match that. If not, it uses the base font-size to calculate the line-height.\r\n\r\n-line-height()\r\n  if @font-size\r\n    line-height: 1.6em\r\n  else\r\n    line-height: unit($font-size*1.6, 'px')\r\n    line-height: 1.6rem\r\n\r\n// Mixin: Text Margin\r\n//\r\n// Puts nice visually pleasing top and bottom margins on a paragraph of text.\r\n// Put a font-size on your element to have it adjust accordingly.\r\n//\r\n// ex. p\r\n//       font-size: 18px\r\n//       text-margin()\r\n\r\ntext-margin($size = $font-size)\r\n  if @font-size\r\n    margin: .75em 0\r\n  else\r\n    margin: unit($font-size*.75, 'px') 0\r\n\r\n// Mixin: Paragraph\r\n//\r\n// Sets a nice size, line-height, and margins on a paragraph of text. Pass a\r\n// size in to customize. Toggle margins off if you don't want them.\r\n//\r\n// ex. p()\r\n// ex. p: 18px\r\n// ex. p: 14px false\r\n\r\np($size = 1rem, $margins = true)\r\n  font-size: $size\r\n  text-margin() if $margins\r\n  -line-height()\r\n  open-type-ligatures() if $ligatures\r\n\r\n// Alias: paragraph\r\nparagraph = p\r\n\r\n// Alias: Font Size\r\n// An alias for 'font-size' with auto-fallback for rem.\r\n// ex. fs: 16px\r\n// ex. fs: 1.2rem\r\n\r\nfs($size)\r\n  if (unit($size) == 'rem')\r\n    font-size: round(unit(($font-size*$size), 'px'))\r\n    font-size: $size\r\n  else\r\n    font-size: $size\r\n\r\n// Alias: Uppercase\r\n// An alias for 'text-transform: uppercase'\r\n// ex. uppercase()\r\n\r\nuppercase()\r\n  text-transform: uppercase\r\n\r\n// Alias: Upcase\r\nupcase = uppercase\r\n\r\n// Alias: Lowercase\r\n// An alias for 'text-transform: lowercase'\r\n// ex. lowercase()\r\n\r\nlowercase()\r\n  text-transform: lowercase\r\n\r\n// Alias: Downcase\r\ndowncase = lowercase\r\n\r\n// Alias: Reset Case\r\n// Gets rid of an text transform\r\n// ex. reset-case()\r\n\r\nreset-case()\r\n  text-transform: none\r\n\r\n// Mixin: Small\r\n//\r\n// Makes your text smaller and a little lighter. Great on <small /> tags.\r\n//\r\n// ex. small()\r\n\r\nsmall()\r\n  font-size: 55%\r\n  opacity: .6\r\n  font-weight: normal\r\n\r\n// Function: Heading\r\n// For internal use within headings\r\n\r\n-heading($multiplier, $margins = true)\r\n  font-size: unit(($font-size*$multiplier), 'px')\r\n  font-size: unit($multiplier, 'rem')\r\n  text-rendering: optimizelegibility\r\n  font-weight: bold\r\n  text-margin() if $margins\r\n  -line-height()\r\n  openTypeLigatures() if $ligatures\r\n\r\n// Mixin Set: h1, h2, h3, h4, h5, h6\r\n//\r\n// These provide nice defaults for headings based off the default font size.\r\n// The can scale infinitely, and work best when matched to their corresponding\r\n// html elements. If you'd like to change the base size of a header, just pass\r\n// it as an option.\r\n//\r\n// ex. h3()\r\n// ex. h3: 3.5\r\n\r\nh1($size=2.4)\r\n  -heading($size)\r\n\r\nh2($size=1.8)\r\n  -heading($size)\r\n\r\nh3($size=1.5)\r\n  -heading($size)\r\n\r\nh4($size=1.3)\r\n  -heading($size)\r\n\r\nh5($size=1.0)\r\n  -heading($size)\r\n\r\nh6($size=0.9)\r\n  -heading($size)\r\n  upcase()\r\n\r\n// Mixin: Link\r\n//\r\n// A nice default style for links. Accepts a color and a style. Color can be\r\n// anything, style can be underline, darken, lighten, or glow, each giving it a\r\n// different style of interaction when hovered. More suggestions here welcome.\r\n//\r\n// ex. link()\r\n// ex. link: green\r\n// ex. link: #57777E 'glow'\r\n\r\nlink($color = $blue, $style = 'underline')\r\n  color: $color\r\n  text-decoration: none\r\n  transition()\r\n\r\n  if $style == 'underline'\r\n    hover-underline()\r\n    &:hover\r\n      color: darken(@color, 15%)\r\n  else if $style == 'darken'\r\n    &:hover\r\n      color: darken(@color, 20%)\r\n  else if $style == 'lighten'\r\n    hover-lighten()\r\n  else if $style == 'glow'\r\n    &:hover\r\n      text-shadow: 0 0 7px rgba(@color, .6)\r\n\r\n  &:visited\r\n    opacity: .8\r\n\r\n// Mixin: Reset Link\r\n//\r\n// Sometimes my link mixin of the browser defaults will give you questionable\r\n// link defaults that you don't want on certain elements. This guy gets rid of\r\n// that.\r\n\r\n// ex. reset-link()\r\n\r\nreset-link()\r\n  border: none\r\n  text-decoration: none\r\n  color: initial\r\n\r\n  &:hover\r\n    border: none\r\n    text-decoration: none\r\n    color: initial\r\n\r\n  &:visited\r\n    opacity: 1\r\n\r\n// Mixin: Text Selection\r\n//\r\n// This guy sets the text select color intelligently based on the\r\n// highlight-color variable found in the settings file. If you really want, you\r\n// can pass it a color override too.\r\n\r\n// ex. text-selection()\r\n\r\ntext-selection($color = $highlight-color, $text-color = null)\r\n\r\n  $text-color = (light($color) ? white : #494949) unless $text-color\r\n\r\n  &::-moz-selection\r\n    background: $color\r\n    color: $text-color\r\n\r\n  &::selection\r\n    background: $color\r\n    color: $text-color\r\n\r\n// Mixin: Ul\r\n//\r\n// A nice default for list styles. More or less the same as browser defaults,\r\n// scales nicely. You can pass it any style that list-style-type would normally\r\n// take. Defaults to disc. Use this on a ul element por favor.\r\n//\r\n// ex. ul()\r\n// ex. ul: 'square'\r\n\r\nul($style = 'disc')\r\n  margin: 5px 15px\r\n  margin: 0.32rem 0.94rem\r\n  padding-left: 1rem\r\n\r\n  li\r\n    list-style-type: unquote($style)\r\n    padding: 2px 0\r\n    padding: 0.125rem\r\n\r\n// Mixin: Ol\r\n//\r\n// A nice default for list styles. More or less the same as browser defaults,\r\n// scales nicely. You can pass it any style that list-style-type would normally\r\n// take. Defaults to decimal. Use this on a ol element por favor.\r\n//\r\n// ex. ol()\r\n// ex. ol: 'upper-roman'\r\n\r\nol($style = 'decimal')\r\n  margin: 5px 18px\r\n  margin: 0.32rem 1.125rem\r\n  padding-left: 1rem\r\n\r\n  li\r\n    list-style-type: unquote($style)\r\n    padding: 2px 0\r\n    padding: 0.125rem\r\n\r\n// Mixin: Inline List\r\n//\r\n// For when you need your list to be horizontal. Pass it the spacing you want\r\n// between list elements, whatever units you'd like. Defaults to 20px.\r\n//\r\n// ex. inline-list()\r\n// ex. inline-list: 15px\r\n\r\ninline-list($spacing = 20px)\r\n  group()\r\n  margin: 0\r\n  padding: 0\r\n\r\n  li\r\n    float: left\r\n    margin-right: $spacing\r\n    list-style-type: none\r\n\r\n  li:last-child\r\n    margin-right: 0\r\n\r\n// Mixin: Reset List\r\n//\r\n// If you're tired of all the list shenanigans and want to get rid of them for\r\n// this special list you're working on, this is your guy. Resets the margins,\r\n// padding, and style.\r\n//\r\n// ex. reset-list()\r\n\r\nreset-list()\r\n  margin: 0\r\n  padding: 0\r\n\r\n  li\r\n    float: none\r\n    list-style-type: none\r\n    padding: 0\r\n    margin: 0\r\n\r\n// Mixin: Blockquote\r\n//\r\n// Nice styles for a blockquote, and even puts a nice hyphen in before your\r\n// citation. Use with a <p> and <cite>, <footer>, or <figcaption> inside for\r\n// best results. Pass a color or 'none' to set the left border.\r\n//\r\n// ex. blockquote()\r\n\r\nblockquote($color = $blue)\r\n  border-left: 4px solid $color\r\n  margin: 1em 0\r\n  padding-left: 1.5em\r\n  group()\r\n\r\n  > p\r\n    font-weight: 300\r\n    font-size: 127%\r\n    font-size: 1.27rem\r\n    line-height: 127%\r\n    line-height: 1.27rem\r\n    margin-top: 0\r\n\r\n  > cite, > footer, > figcaption\r\n    color: #888888\r\n    &:before\r\n      content: '\\2014'\r\n\r\n// Alias: blockquo\r\nblockquo = blockquote\r\n\r\n// Hyphenation\r\n//\r\n// Hyphenation is the better word-break. It’s locale aware, and inserts the\r\n// hyphen character at the correct place, when breaking the words. This is\r\n// especially important in responsive designs. It will save you from a lot of\r\n// ragged lines. And, no need anymore for clunky & slow Javascript hyphenation\r\n// fallbacks. Taken from http://www.newnet-soft.com/blog/csstypography\r\n//\r\n// ex. hyphenation()\r\n\r\nhyphenation()\r\n    -ms-word-break: break-all\r\n    word-break:     break-all\r\n    word-break:     break-word // webkit\r\n    hyphens: auto // none, auto, <number>\r\n    -webkit-hyphenate-before: 2\r\n    -webkit-hyphenate-after:  3\r\n    hyphenate-lines:          3\r\n\r\n// Mixin: Shadow Stroke\r\n//\r\n// Creates a text outline using text-shadow. Ported from nib.\r\n// Takes a color.\r\n//\r\n// ex: shadow-stroke()\r\n// ex: sahdow-stroke(red)\r\n\r\nshadow-stroke($color = $blue)\r\n  text-shadow: -1px -1px 0 $color, 1px -1px 0 $color, -1px 1px 0 $color, 1px 1px 0 $color\r\n\r\n// Additive Mixin: Base\r\n//\r\n// WARNING: Creates classes in your css and styles them - not to be used inside\r\n// an element.\r\n//\r\n// This is an essential mixin. You want this on your page. Sets your font stack,\r\n// size, and colors based on the settings file and makes sure that your text is\r\n// a great looking as possible. You can override any of the params, but there is\r\n// really no reason to.\r\n//\r\n// ex. base()\r\n\r\nbase($fonts = $font-stack, $size = $font-size, $color = $font-color)\r\n  html\r\n    font-size: unit($size, 'px')\r\n    font-size: unit(($size/16)*100, \"%\")\r\n\r\n  body\r\n    font-family: $fonts\r\n    color: $color\r\n    -webkit-font-smoothing: antialiased\r\n    -webkit-text-size-adjust: 100%\r\n    -ms-text-size-adjust: 100%\r\n    font-size-adjust: auto\r\n\r\n// Additive Mixin: Headers\r\n//\r\n// WARNING: Creates classes in your css and styles them - not to be used inside\r\n// an element.\r\n//\r\n// Adds roots' wonderful scaling header styles to your <hx> tags.\r\n//\r\n// ex. headers()\r\n\r\nheaders()\r\n  h1\r\n    h1()\r\n\r\n  h2\r\n    h2()\r\n\r\n  h3\r\n    h3()\r\n\r\n  h4\r\n    h4()\r\n\r\n  h5\r\n    h5()\r\n\r\n  h6\r\n    h6()\r\n\r\n// Additive Mixin: Lists\r\n//\r\n// WARNING: Creates classes in your css and styles them - not to be used inside\r\n// an element.\r\n//\r\n// Adds roots' styles to ul and ols.\r\n//\r\n// ex. lists()\r\n\r\nlists()\r\n  ul\r\n    ul()\r\n  ol\r\n    ol()\r\n\r\n// Additive Mixin: Bold-Italic\r\n//\r\n// WARNING: Creates classes in your css and styles them - not to be used inside\r\n// an element.\r\n//\r\n// Adds bold and italic styles to the right tags if you did a global reset.\r\n//\r\n// ex. bold-italic()\r\n\r\nbold-italic()\r\n  b\r\n    bold()\r\n  i\r\n    italic()\r\n  strong\r\n    bold()\r\n  em\r\n    italic()\r\n\r\n// Additive Mixin: Typography\r\n//\r\n// WARNING: Creates classes in your css and styles them - not to be used inside\r\n// an element.\r\n//\r\n// Adds roots' styles to bold and italic elements, headers, paragrapgs, small\r\n// text, links, lists, and blockquotes. Got all your basic elements covered.\r\n//\r\n// ex. typography()\r\n\r\ntypography()\r\n  bold-italic()\r\n  headers()\r\n  lists()\r\n  text-selection()\r\n\r\n  p\r\n    paragraph()\r\n\r\n  small\r\n    small()\r\n\r\n  a[href]:not([class])\r\n    link()\r\n\r\n  blockquote\r\n    blockquo()\r\n\r\n  .hyphenation\r\n    hyphenation()\r\n","@import '_settings'\r\n\r\nnormalize-css()\r\nbase()\r\n\r\nbody\r\n  padding: 50px\r\n"]}